{
  "version": 3,
  "sources": ["../app.ts"],
  "sourcesContent": ["// app.ts\r\n\r\nimport * as L from 'https://esm.sh/leaflet@1.9.4';\r\n\r\n// Your 16-hex-digit device EUI for subscription\r\nconst DEVICE_EUI = '0004A30B010D3F45';\r\n\r\nlet map: L.Map;\r\nlet marker: L.Marker;\r\nlet circle: L.Circle;\r\n\r\n// Track current mode: false = standard, true = stolen\r\nlet isStolenMode = false;\r\n\r\n// --- Cookie helper functions ---\r\nfunction setCookie(name: string, value: string, days: number) {\r\n  const expires = new Date(Date.now() + days * 864e5).toUTCString();\r\n  document.cookie = `${name}=${encodeURIComponent(value)}; expires=${expires}; path=/`;\r\n}\r\nfunction getCookie(name: string): string {\r\n  return document.cookie\r\n    .split('; ')\r\n    .reduce((r, v) => {\r\n      const [key, val] = v.split('=');\r\n      return key === name ? decodeURIComponent(val) : r;\r\n    }, '');\r\n}\r\n\r\n// Update UI elements based on current mode\r\nfunction updateModeUI() {\r\n  const mapEl = document.getElementById('map') as HTMLElement;\r\n  const btn   = document.getElementById('sendDownlink') as HTMLButtonElement;\r\n  if (!mapEl || !btn) return;\r\n\r\n  if (isStolenMode) {\r\n    mapEl.style.display = 'block';\r\n    btn.textContent     = 'Switch to Standard Mode';\r\n    // Fix: ensure tiles load correctly after container is shown\r\n    setTimeout(() => map.invalidateSize(), 0);\r\n  } else {\r\n    mapEl.style.display = 'none';\r\n    btn.textContent     = 'Switch to Stolen Mode';\r\n  }\r\n}\r\n\r\n// Initialize the Leaflet map (hidden by default)\r\nfunction setupMap() {\r\n  map = L.map('map').setView([51.505, -0.09], 13);\r\n  L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n    attribution: '&copy; OpenStreetMap contributors'\r\n  }).addTo(map);\r\n\r\n  marker = L.marker([51.5, -0.09]).addTo(map)\r\n    .bindPopup('Current Location.')\r\n    .openPopup();\r\n  circle = L.circle([51.5, -0.09], { radius: 200 }).addTo(map);\r\n\r\n  // Hide map initially if in standard mode\r\n  const mapEl = document.getElementById('map') as HTMLElement;\r\n  if (mapEl) mapEl.style.display = 'none';\r\n}\r\n\r\n/**\r\n * Parse incoming 13-byte payload:\r\n * [0\u20133] int32 lat (\u00D71e\u20137), [4\u20137] int32 lng (\u00D71e\u20137),\r\n * [8\u201311] uint32 accuracy (\u00F71e3), [12] battery %\r\n */\r\nfunction parsePayload(bytes: number[]): {\r\n  lat: number; lng: number; acc: number; battery: number;\r\n} {\r\n  const view = new DataView(new ArrayBuffer(bytes.length));\r\n  bytes.forEach((b, i) => view.setUint8(i, b));\r\n  return {\r\n    lat:     view.getInt32(0, true) / 1e7,\r\n    lng:     view.getInt32(4, true) / 1e7,\r\n    acc:     view.getUint32(8, true) / 1e3,\r\n    battery: view.getUint8(12),\r\n  };\r\n}\r\n\r\n// Render an incoming frame, with guardrails per mode\r\nfunction renderFrame(frame: any) {\r\n  const outerHex = frame.data as string;\r\n  const raw: number[] = [];\r\n  for (let i = 0; i < outerHex.length; i += 2) {\r\n    raw.push(parseInt(outerHex.slice(i, i + 2), 16));\r\n  }\r\n\r\n  const el = document.getElementById('sensor-data');\r\n  if (!el) return;\r\n\r\n  if (isStolenMode) {\r\n    // Expect full 13-byte payload\r\n    if (raw.length !== 13) {\r\n      console.error(`Stolen mode expects 13 bytes, got ${raw.length}`);\r\n      return;\r\n    }\r\n    const { lat, lng, acc } = parsePayload(raw);\r\n    marker.setLatLng([lat, lng]);\r\n    circle.setLatLng([lat, lng]).setRadius(acc);\r\n    map.panTo([lat, lng]);\r\n    el.innerHTML = `\r\n      <p>Latitude: ${lat.toFixed(6)}</p>\r\n      <p>Longitude: ${lng.toFixed(6)}</p>\r\n    `;\r\n  } else {\r\n    // Standard mode: expect only battery byte\r\n    if (raw.length !== 1) {\r\n      console.error(`Standard mode expects 1 byte, got ${raw.length}`);\r\n      return;\r\n    }\r\n    const battery = raw[0];\r\n    el.innerHTML = `<p>Battery: ${battery}%</p>`\r\n    \r\n  }\r\n}\r\n\r\n// WebSocket setup: request cache & subscribe, then handle updates\r\nconst proto  = location.protocol === 'https:' ? 'wss:' : 'ws:';\r\nconst socket = new WebSocket(`${proto}//${location.host}/ws`);\r\nsocket.onopen = () => {\r\n  // Fetch history cache\r\n  socket.send(JSON.stringify({ cmd: 'cq', page: 1 }));\r\n  // Then subscribe for live updates\r\n  socket.send(JSON.stringify({ cmd: 'sub', EUI: DEVICE_EUI }));\r\n};\r\nsocket.onmessage = evt => {\r\n  const msg = JSON.parse(evt.data);\r\n\r\n  if (msg.cmd === 'cq') {\r\n    const cache = (msg.cache as any[]).filter(i => i.EUI === DEVICE_EUI);\r\n    if (cache.length) {\r\n      const last = cache[cache.length - 1];\r\n      // Detect mode based on payload size\r\n      const hex = last.data as string;\r\n      const rawBytes: number[] = [];\r\n      for (let i = 0; i < hex.length; i += 2) {\r\n        rawBytes.push(parseInt(hex.slice(i, i + 2), 16));\r\n      }\r\n      const detectedStolen = rawBytes.length === 13;\r\n      if (detectedStolen !== isStolenMode) {\r\n        isStolenMode = detectedStolen;\r\n        setCookie('mode', isStolenMode ? '1' : '0', 7);\r\n        updateModeUI();\r\n      }\r\n      renderFrame(last);\r\n    }\r\n  } else if ((msg.cmd === 'gw' || msg.cmd === 'rx') && msg.EUI === DEVICE_EUI) {\r\n    renderFrame(msg);\r\n  }\r\n};\r\nsocket.onerror = e => console.error('WS error', e);\r\nsocket.onclose = () => console.log('WS closed');\r\n\r\n// Toggle-mode button: flip state, persist cookie, send 1-byte downlink\r\nfunction setupDownlinkButton() {\r\n  const btn = document.getElementById('sendDownlink');\r\n  if (!btn) return;\r\n\r\n  btn.addEventListener('click', () => {\r\n    isStolenMode = !isStolenMode;\r\n    setCookie('mode', isStolenMode ? '1' : '0', 7);\r\n    updateModeUI();\r\n\r\n    const hex = isStolenMode ? '01' : '00';\r\n    socket.send(JSON.stringify({\r\n      cmd:       'tx',\r\n      EUI:       DEVICE_EUI,\r\n      data:      hex,\r\n      port:      2,\r\n      confirmed: false,\r\n      priority:  0\r\n    }));\r\n  });\r\n}\r\n\r\n// Bootstrap on DOM ready\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  setupMap();\r\n  // Restore mode from cookie\r\n  isStolenMode = getCookie('mode') === '1';\r\n  updateModeUI();\r\n  setupDownlinkButton();\r\n});\r\n"],
  "mappings": "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",
  "names": ["map", "marker", "circle"]
}
