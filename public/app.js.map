{
  "version": 3,
  "sources": ["../app.ts"],
  "sourcesContent": ["// app.ts\r\n\r\nimport * as L from 'https://esm.sh/leaflet@1.9.4';\r\n\r\n// Your 16\u2011hex\u2011digit device EUI for subscription\r\nconst DEVICE_EUI = '0004A30B010D3F45';\r\n\r\nlet map: L.Map;\r\nlet marker: L.Marker;\r\nlet circle: L.Circle;\r\n\r\n/**\r\n * Initialize the Leaflet map using the OSM example snippet\r\n */\r\nfunction setupMap() {\r\n  // Center map at example coords with zoom 13\r\n  map = L.map('map').setView([51.505, -0.09], 13);\r\n\r\n  // OSM tile layer\r\n  L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n    attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n  }).addTo(map);\r\n\r\n  // Example marker + popup\r\n  marker = L.marker([51.5, -0.09]).addTo(map)\r\n    .bindPopup('Current Location.')\r\n    .openPopup();\r\n  \r\n  circle = L.circle([51.5, -0.09], {radius: 200}).addTo(map)\r\n}\r\n\r\n/**\r\n * Parse incoming 12-byte payload:\r\n * [0\u20133] float32 lat, [4\u20137] float32 lng, [8\u201311] uint32 battery (little-endian)\r\n */\r\nfunction parsePayload(bytes: number[]): { lat: number; lng: number; acc: number; battery: number } {\r\n  const view = new DataView(new ArrayBuffer(13));\r\n  bytes.forEach((b, i) => view.setUint8(i, b));\r\n  return {\r\n    lat: view.getInt32(0, true)/10000000,\r\n    lng: view.getInt32(4, true)/10000000,\r\n    acc: view.getUint32(8, true)/1000,\r\n    battery: view.getUint8(12)\r\n  };\r\n}\r\n\r\n/**\r\n * Update the marker position and map view\r\n */\r\nfunction renderFrame(frame: any) {\r\n  // 1) Grab the 48-char hex from Loriot\r\n  const outerHex = frame.data as string;\r\n\r\n  // 2) Decode it to an array of ASCII char codes\r\n  /*\r\n  const asciiCodes: number[] = [];\r\n  for (let i = 0; i < outerHex.length; i += 2) {\r\n    asciiCodes.push(parseInt(outerHex.slice(i, i + 2), 16));\r\n  }\r\n  const asciiHex = String.fromCharCode(...asciiCodes);  // e.g. \"54B45E42C21749\u2026\"\r\n  */\r\n  // 3) Now decode that ASCII-hex into your 12 bytes\r\n  const raw: number[] = [];\r\n  for (let i = 0; i < outerHex.length; i += 2) {\r\n    raw.push(parseInt(outerHex.slice(i, i + 2), 16));\r\n  }\r\n  console.log(raw)\r\n\r\n  if (raw.length !== 13) {\r\n    console.error(`Expected 13 bytes but got ${raw.length}`);\r\n    return;\r\n  }\r\n\r\n  // 4) Parse out lat, lng, battery\r\n  const { lat, lng, battery, acc } = parsePayload(raw);\r\n\r\n  // 5) Update your marker, map, and UI\r\n  marker.setLatLng([lat, lng]);\r\n  circle.setLatLng([lat,lng]);\r\n  circle.setRadius(acc);\r\n  map.panTo([lat, lng]);\r\n  const el = document.getElementById(\"sensor-data\");\r\n  if (el) {\r\n    el.innerHTML = `\r\n      <p>Latitude: ${lat.toFixed(6)}</p>\r\n      <p>Longitude: ${lng.toFixed(6)}</p>\r\n      <p> Accuracy:${acc.toFixed(6)}</p>\r\n      <p>Battery: ${battery}</p>\r\n    `;\r\n  }\r\n}\r\n\r\n/**\r\n * Simple downlink encoder (setCounter & range)\r\n */\r\ntype DownlinkOk = { fPort: number; bytes: number[]; warnings: string[] };\r\ntype DownlinkErr = { errors: string[] };\r\nfunction encodeDownlink(input: { setCounter: boolean; range: number }): DownlinkOk | DownlinkErr {\r\n  const { setCounter, range } = input;\r\n  if (typeof range !== 'number') return { errors: ['Invalid range'] };\r\n  return { fPort: 10, bytes: [setCounter ? 1 : 0, range & 0xff], warnings: [] };\r\n}\r\n\r\n// Open WebSocket to Loriot proxy\r\ndeclare const location: any;\r\nconst proto = location.protocol === 'https:' ? 'wss:' : 'ws:';\r\nconst socket = new WebSocket(`${proto}//${location.host}/ws`);\r\n\r\nsocket.onopen = () => {\r\n  socket.send(JSON.stringify({ cmd: 'cq', page: 1 }));\r\n  socket.send(JSON.stringify({ cmd: 'sub', EUI: DEVICE_EUI }));\r\n};\r\n\r\nsocket.onmessage = evt => {\r\n  const msg = JSON.parse(evt.data);\r\n  if (msg.cmd === 'cq') {\r\n    msg.cache.filter((i: any) => i.EUI === DEVICE_EUI).forEach(renderFrame);\r\n  } else if ((msg.cmd === 'gw' || msg.cmd === 'rx') && msg.EUI === DEVICE_EUI) {\r\n    renderFrame(msg);\r\n  }\r\n};\r\n\r\nsocket.onerror = e => console.error('WS error', e);\r\nsocket.onclose = () => console.log('WS closed');\r\n\r\n/**\r\n * Hook up the downlink button\r\n */\r\nfunction setupDownlinkButton() {\r\n  const btn = document.getElementById('sendDownlink');\r\n  if (!btn) return;\r\n  btn.addEventListener('click', () => {\r\n    const res = encodeDownlink({ setCounter: true, range: 1 });\r\n    if ('errors' in res) return console.error(res.errors);\r\n    const hex = res.bytes.map(b => b.toString(16).padStart(2, '1')).join('');\r\n    socket.send(JSON.stringify({ cmd: 'tx', EUI: DEVICE_EUI, data: hex, port: 2, confirmed: false, priority: 0 }));\r\n  });\r\n}\r\n\r\n// Initialize map & button once DOM is ready\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  setupMap();\r\n  setupDownlinkButton();\r\n});\r\n"],
  "mappings": "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",
  "names": ["map", "marker", "circle"]
}
